//binary search tree
#include<bits/stdc++.h>
using namespace std;
struct bstnode{
bstnode* left;
bstnode*right;
int data;
};
bool searching(bstnode* root,int x)
{
    bool b;
    if(root==NULL)
        return false;
    if(x==(root->data))
        {
          return true;
        }
    else if(x<root->data)
        b=searching(root->left,x);
    else
        b=searching(root->right,x);
    return b;
}
bstnode* insertion(bstnode* root,int x)
{
    if(root==NULL)
    {
        bstnode* newnode=new bstnode();
        newnode->data=x;
        newnode->left=newnode->right=NULL;
        root=newnode;
    }
    else if(x<=root->data)
        root->left=insertion(root->left,x);
    else
        root->right=insertion(root->right,x);
    return root;

}
int main()
{
  struct bstnode* root=NULL;
  root=insertion(root,3);
  root=insertion(root,6);
  root=insertion(root,10);
  root=insertion(root,12);
  root=insertion(root,4);
  cout<<searching(root,4);
  cout<<searching(root,11);
  return 0;
}
